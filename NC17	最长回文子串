class Solution {
public:
    int getLongestPalindrome(string A, int n) {
        // write code here
//         vector<vector<int>> dp(n,vector<int>(n));
//         int res=0;
//         for(int l=0;l<n;l++){
//             for(int i=0;i+l<n;i++){
//                 int j=i+l;
//                 if(A[i]==A[j]){
//                     if(l==0||l==1){
//                         dp[i][j]=true;
//                     }
//                     else{
//                         dp[i][j]=dp[i+1][j-1];
//                     }
//                 }
//                 if(dp[i][j]){
//                 res=max(res,l+1);
//                 }
//             }
//         }
//         return res;
        int res=0;
        for(int i=0;i<n-1;i++){
            int len1=centerPread(A,i,i);
            int len2=centerPread(A,i,i+1);
            int maxlen=max(len1,len2);
            if(maxlen>res){
                res=maxlen;
            }
        }
       return res;
    }
    int centerPread(string& s,int l,int r){
        while(l>=0&&r<s.size()&&s[l]==s[r]){
            l--;
            r++;
        }
        return r-l-1;
    }
};
