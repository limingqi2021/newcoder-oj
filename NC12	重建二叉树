/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    map<int,int> index;
    TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> vin) {
        for(int i=0;i<vin.size();i++){
        index[vin[i]]=i;
        }
        return recur(pre,vin,0,0,vin.size()-1);
    }
    TreeNode* recur(vector<int>& pre,vector<int>& vin,int r,int left,int right){
        if(left>right)
            return nullptr;
        TreeNode* head=new TreeNode(pre[r]);
        int i=index[pre[r]];
        head->left=recur(pre,vin,r+1,left,i-1);
        head->right=recur(pre,vin,r+i-left+1,i+1,right);
        return head;
    }
};
